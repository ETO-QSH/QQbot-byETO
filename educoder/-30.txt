def is_prime(n):
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

    
def goldbach_conjecture(num):
    if num < 4 or num % 2 != 0:
        print('Data error!')
        return
    primes = []
    for i in range(2, num // 2 + 1):
        if is_prime(i):
            primes.append(i)
    for p in primes:
        q = num - p
        if is_prime(q) and p <= q:
            print(f'{num}={p}+{q}')

if __name__ == '__main__':
    positive_even = int(input())
    goldbach_conjecture(positive_even)